datas1 = [['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'U238417', 'A150208'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311'], ['KS009000', 'T999936', 'X523010', 'U238417', 'U238417', 'A150208', 'O789428', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'J620311', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'X523010', 'U238417', 'A150208', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'T999936', 'U238417', 'A150208', 'O789428', 'Z999936', 'K241209'], ['KS009000', 'U238417', 'A150208', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'U238417', 'A150208', 'O789428', 'Z999936', 'K241209'], ['KS009000', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'O789428', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'Z999936'], ['KS009000', 'Z999936', 'K241209'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000', 'H071210'], ['KS009000', 'H071210'], ['KS009000', 'H071210', 'T999936'], ['H071210', 'T999936'], ['H071210', 'T999936', 'U238417', 'A150208'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'KS001000'], ['H071210', 'T999936', 'U238417', 'A150208', 'Z999936', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'J620311', 'Z999936', 'KS001000'], ['H071210', 'T999936', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['T999936', 'X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['X523010', 'U238417', 'A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000'], ['U238417', 'A150208', 'J620311', 'Z999936', 'K241209', 'KS001000', 'E154818'], ['A150208', 'O789428', 'J620311', 'Z999936', 'K241209', 'KS001000', 'E154818', 'A001102'], ['O789428', 'Z999936', 'K241209', 'KS001000', 'E154818', 'A001102', 'A000101'], ['J620311', 'Z999936', 'K241209', 'KS001000', 'E154818', 'A001102', 'A000101', 'H584219'], ['Z999936', 'KS001000', 'E154818', 'A001102', 'A000101', 'H584219', 'A001506'], ['E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010'], ['K241209', 'KS001000', 'E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010'], ['KS001000', 'E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523'], ['KS001000', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523'], ['KS001000', 'E154818', 'A001102', 'A000101', 'R208010', 'K140611', 'V558523', 'Q842418', 'A008513'], ['KS001000', 'A001102', 'A000101', 'H584219', 'A001506', 'H199625', 'R208010', 'K140611', 'K140611', 'V558523', 'A008513'], ['KS001000', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523', 'Q842418'], ['KS001000', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523', 'Q842418'], ['KS001000', 'A000101', 'A001506', 'R208010', 'K140611', 'V558523', 'Q842418'], ['KS001000', 'H584219', 'A001506', 'R208010', 'Q842418'], ['KS001000', 'A001102', 'A001506', 'R208010', 'Q842418'], ['KS001000', 'E154818', 'A000101', 'R208010', 'K140611'], ['KS001000', 'A001506', 'R208010', 'K140611'], ['KS001000', 'E154818', 'A001102', 'H584219', 'A001506'], ['KS001000'], ['KS001000', 'H584219'], ['KS001000'], ['KS001000', 'A001506'], ['KS001000', 'E154818'], ['KS001000', 'A000101'], ['KS001000'], ['KS001000', 'E154818', 'A000101', 'A001506'], ['KS001000', 'E154818', 'A001102'], ['KS001000', 'E154818', 'A001102', 'H584219'], ['KS001000', 'E154818', 'A001102', 'A000101', 'H584219', 'A001506'], ['E154818', 'A001102', 'A000101', 'A001506', 'R208010', 'KS002000'], ['E154818', 'A001102', 'A000101', 'A001506', 'A001506', 'KS002000'], ['E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'KS002000'], ['E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'KS002000'], ['E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'Q842418', 'KS002000'], ['E154818', 'A001102', 'A000101', 'H584219', 'A001506', 'R208010', 'A008513', 'KS002000', 'H562417'], ['E154818', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523', 'KS002000', 'H562417', 'I481518'], ['A000101', 'H584219', 'A001506', 'R208010', 'K140611', 'V558523', 'Q842418', 'A008513', 'KS002000', 'H562417', 'I481518', 'J875222'], ['H584219', 'R208010', 'K140611', 'V558523', 'Q842418', 'KS002000', 'H562417', 'I481518', 'J875222', 'A130913'], ['A001506', 'R208010', 'V558523', 'Q842418', 'A008513', 'H562417', 'I481518', 'J875222', 'A130913', 'U121206'], ['K140611', 'V558523', 'Q842418', 'A008513', 'H562417', 'I481518', 'J875222', 'A130913', 'U121206', 'A121004'], ['V558523', 'Q842418', 'A008513', 'I481518', 'J875222', 'A130913', 'U121206', 'A121004', 'M032611'], ['V558523', 'Q842418', 'A008513', 'I481518', 'J875222', 'A130913', 'U121206', 'A121004', 'M032611', 'P155819'], ['A130913', 'U121206', 'A121004', 'M032611', 'P155819'], ['U121206', 'A121004', 'M032611', 'P155819'], ['U121206', 'A121004', 'M032611', 'P155819'], ['M032611', 'P155819'], [], [], [], [], [], [], [], [], [], [], [], ['KS002000'], ['KS002000'], ['KS002000'], ['KS002000'], ['I481518'], ['H562417', 'I481518'], ['I481518'], ['H562417', 'I481518', 'J875222'], ['I481518', 'J875222'], ['KS010000'], ['KS010000'], ['U121206', 'KS010000', 'Y383115'], ['KS010000'], ['KS010000', 'Y383115'], ['P155819', 'KS010000', 'X060410'], ['C585220', 'X060410', 'L585220'], ['X060410', 'X060410', 'L585220', 'K678930'], ['X060410', 'L585220'], [], ['L585220'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000', 'D050308', 'A000202'], ['KS010000', 'Y383115', 'D050308', 'A000202'], ['KS010000', 'A000202'], ['KS010000', 'Y383115', 'D050308', 'A000202', 'X060410'], ['KS010000', 'Y383115', 'D050308', 'A000202', 'C585220', 'X060410', 'K678930'], ['KS010000', 'Y383115', 'D050308', 'A000202', 'X060410', 'L585220', 'K678930'], ['KS010000', 'Y383115', 'A000202', 'C585220', 'X060410', 'L585220', 'K678930'], ['KS010000', 'Y383115', 'A000202', 'T170715', 'C585220', 'X060410', 'L585220', 'K678930'], ['Y383115', 'D050308', 'A000202', 'C585220', 'X060410', 'L585220', 'K678930'], ['Y383115', 'D050308', 'A000202', 'T170715', 'C585220', 'X060410', 'K678930', 'R308011'], ['Y383115', 'A000202', 'T170715', 'C585220', 'X060410', 'L585220', 'K678930']]

datas2 = [['KS009000', 'H071210'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'O789428'], ['KS009000', 'H071210', 'T999936', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'O789428'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417'], ['KS009000', 'H071210', 'T999936', 'U238417'], ['KS009000', 'H071210', 'T999936', 'U238417', 'O789428'], ['KS009000', 'T999936', 'U238417', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'U238417', 'O789428', 'J620311'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'U238417', 'J620311', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'J620311', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'T999936', 'U238417', 'Z999936', 'K241209'], ['U238417', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'T999936', 'X523010', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'T999936', 'X523010', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'T999936', 'X523010', 'U238417', 'Z999936'], ['KS009000', 'H071210', 'T999936', 'U238417', 'Z999936', 'K241209'], ['H071210', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'H071210', 'U238417', 'O789428', 'J620311', 'Z999936'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'T999936', 'U238417', 'Z999936', 'K241209'], ['KS009000', 'U238417', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'J620311', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'Z999936', 'K241209'], ['Z999936'], ['KS009000', 'Z999936', 'K241209'], ['KS009000', 'J620311', 'Z999936'], ['KS009000', 'K241209'], ['KS009000'], ['KS009000', 'Z999936'], ['KS009000'], ['KS009000', 'K241209'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000'], ['KS009000', 'H071210'], ['KS009000'], ['KS009000', 'H071210'], ['KS009000', 'H071210'], ['KS009000'], ['KS009000', 'T999936', 'Z999936'], ['KS009000', 'Z999936', 'KS001000'], ['KS009000', 'H071210', 'T999936', 'KS001000'], ['KS009000', 'H071210', 'KS001000'], ['KS009000', 'H071210', 'Z999936', 'KS001000'], ['KS009000', 'H071210', 'T999936', 'Z999936', 'KS001000'], ['KS009000', 'T999936', 'KS001000'], ['KS009000', 'H071210', 'T999936', 'Z999936', 'KS001000'], ['T999936', 'U238417', 'Z999936', 'KS001000'], ['H071210', 'T999936', 'U238417', 'Z999936', 'KS001000'], ['H071210', 'U238417', 'Z999936', 'KS001000'], ['H071210', 'T999936', 'X523010', 'U238417', 'KS001000'], ['T999936', 'X523010', 'Z999936', 'KS001000'], ['H071210', 'T999936', 'U238417', 'Z999936', 'KS001000'], ['T999936', 'X523010', 'U238417', 'Z999936', 'E154818'], ['T999936', 'X523010', 'U238417', 'Z999936', 'K241209', 'E154818'], ['X523010', 'U238417', 'Z999936', 'K241209', 'KS001000', 'E154818'], ['Z999936', 'K241209', 'E154818', 'A001102'], ['Z999936', 'K241209', 'E154818'], ['Z999936', 'A001102', 'H584219'], ['Z999936', 'K241209', 'E154818', 'H584219', 'A001506'], ['E154818', 'A001102', 'H584219'], ['Z999936', 'E154818', 'H584219', 'A001506'], ['H584219', 'A001506', 'K140611', 'V558523'], ['H584219', 'R208010', 'K140611', 'V558523'], ['R208010', 'K140611', 'V558523', 'Q842418'], ['H584219', 'R208010', 'K140611', 'V558523'], ['R208010', 'K140611'], ['A001506', 'K140611', 'V558523'], ['K140611'], ['K140611'], [], [], [], [], [], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], ['KS001000'], [], ['E154818', 'KS002000'], ['H584219', 'KS002000'], ['H584219', 'A001506'], ['H584219'], ['A001506', 'KS002000'], ['E154818', 'A001102', 'A000101', 'A001506', 'R208010', 'KS002000'], ['H584219', 'R208010', 'K140611', 'KS002000'], ['H584219', 'R208010', 'K140611', 'KS002000'], ['H584219', 'K140611', 'KS002000'], ['H584219', 'R208010', 'K140611'], ['H584219', 'R208010', 'K140611'], ['H584219', 'K140611', 'Q842418'], ['V558523'], ['K140611', 'V558523', 'Q842418'], ['H562417'], ['H562417', 'I481518'], [], [], [], ['H562417', 'I481518', 'J875222'], ['I481518', 'A130913', 'U121206'], ['I481518', 'U121206'], ['I481518', 'U121206'], ['I481518', 'U121206', 'A121004', 'M032611', 'P155819'], ['U121206', 'M032611'], ['U121206', 'A121004', 'P155819'], ['U121206', 'M032611', 'P155819'], ['U121206', 'A121004', 'M032611', 'P155819'], ['A121004', 'M032611', 'P155819'], ['U121206', 'P155819'], [], ['M032611', 'P155819'], ['U121206', 'P155819'], [], [], [], ['KS002000'], ['KS002000'], ['M032611'], [], ['KS002000'], ['KS002000'], ['KS002000', 'M032611', 'KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS002000', 'KS010000'], ['KS010000'], ['KS010000'], ['I481518', 'KS010000'], ['KS010000'], ['KS010000'], ['KS010000', 'A000202'], ['KS010000', 'A000202'], ['KS010000', 'X060410'], ['H562417', 'I481518', 'KS010000', 'X060410'], ['A121004', 'KS010000'], ['I481518', 'U121206', 'KS010000', 'T170715', 'X060410'], ['I481518', 'U121206', 'KS010000'], ['A130913', 'U121206', 'KS010000', 'A000202', 'X060410'], ['U121206', 'KS010000', 'X060410'], ['U121206', 'A121004', 'M032611', 'KS010000', 'K678930'], ['P155819', 'KS010000', 'T170715', 'K678930', 'R308011'], ['U121206', 'P155819', 'KS010000'], ['M032611', 'P155819', 'KS010000', 'A000202', 'K678930'], ['I481518', 'KS010000', 'A000202'], ['I481518', 'M032611', 'P155819', 'KS010000', 'K678930'], ['U121206', 'P155819', 'KS010000', 'X060410', 'R308011'], ['P155819', 'KS010000'], ['U121206', 'M032611', 'KS010000', 'K678930'], ['M032611', 'P155819', 'KS010000', 'K678930'], ['U121206', 'P155819', 'KS010000', 'K678930'], ['P155819', 'KS010000', 'K678930'], ['M032611', 'P155819', 'KS010000', 'X060410', 'X060410', 'K678930'], ['P155819', 'KS010000'], ['X060410'], ['M032611', 'KS010000'], ['A000202'], ['KS010000'], ['KS010000', 'A000202', 'K678930'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000'], ['KS010000', 'A000202', 'X060410'], ['KS010000']]


def isDrawer(st):
    head = st[:2]
    tail = st[2:]
    if head == 'KS' and tail.isdecimal():
        return True
    return False


def findDrawer(data):
    indexs = []

    # check indexs drawer 
    for i in range(len(data)):
        tmp = data[i]
        if isDrawer(tmp):
            indexs.append(i)
    return indexs


    
def formatResult(datas):
    result = []
    for key, value in datas.items():
        result.append({'drawer':key, 'books':value})
    return result


def filterDrawer(dr1, dr2):
    for book in dr1:
        if book in dr2:
            dr2.remove(book)
    return dr1, dr2  
  
def filterDrawer2(dr1, dr2):
    for book in dr1:
        if book in dr2:
            dr2.remove(book)
    return dr1, dr2  


def runFilterDrawer(datas):
    for i in range(len(datas)):
        if i < len(datas) - 1:
            datas[i]['books'], datas[i+1]['books'] = filterDrawer(datas[i]['books'], datas[i+1]['books'])
    return datas

def runFilterDrawer2(datas):
    le = len(datas)
    for i in range(len(datas)):
        if i > 0:
            dr1, dr2 = datas[le - i]['books'], datas[le - i - 1]['books']
            dr1, dr2 = filterDrawer2(dr1, dr2)
            datas[le - i]['books'], datas[le - i - 1]['books'] = dr1, dr2


    
    return datas

def putBookToDrawer(datas):
    drawers = {}
    position_drawers = {}
    num_drawer = 0
    temp = []
    for data in datas:
        if not data:
            continue
        indexs = findDrawer(data)
        right = []
        left = []
        if not indexs:
            temp.extend(data)
        for i in range(len(indexs)):
            
            # right
            if i < len(indexs) - 1:
                right = data[indexs[i]+1:indexs[i+1]]
            else:
                right = data[indexs[i]+1:]
            
            if not data[indexs[i]] in drawers.keys():
                drawers[data[indexs[i]]] = right
                position_drawers[data[indexs[i]]] = num_drawer
                num_drawer += 1
            else:
                drawers[data[indexs[i]]].extend(right)

            # left 
            if i == 0:
                pre_index = position_drawers[data[indexs[i]]] - 1
                if pre_index >= 0:
                    key_drawer = list(drawers.keys())[pre_index]
                    left =data[:indexs[i]]
                    drawers[key_drawer].extend(left)
                    drawers[key_drawer].extend(temp)
                    temp = []

                
        drawers[list(drawers.keys())[len(drawers.keys())-1]].extend(temp)


            
            
       
    for key in drawers.keys():
        drawers[key] = list(set(drawers[key])) 
    return drawers

def test(datas):
    drawers = {}
    cur = ''
    temp = []
    for data in datas:
        # tim ke
        indexs = findDrawer(data)
        index = -1
        # xac dinh ke
        if indexs:
            index = indexs[0]
            if cur != data[index]:
                if cur != '':
                    drawers[cur] = temp 
                    cur = data[index]
                    temp = []
                    cur = data[index]
                else:
                    cur = data[index]
                    drawers[cur] = []
            temp.extend(data[index + 1:])
        else:
            temp.extend(data)
        
    drawers[cur] = temp


    for key in drawers.keys():
        drawers[key] = takeFeature(drawers[key]) 
    print(drawers)

    return drawers


def takeFeature(data):
    result = []
    for i in data:
        if not i in result and not isDrawer(i):
            result.append(i)
    return result


def distributeFrame(frames):
    storage = {'':[]}
    cur = ''
    for frame in frames:
        indexs = findDrawer(frame)
        if indexs:
            index = indexs.pop()
            if frame[index] != cur:
                cur = frame[index]
                storage[cur] = []

        storage[cur].append(frame)


    temp = storage.pop('')
    if len(storage) > 0:
        temp.extend(storage[list(storage.keys())[0]])
        storage[list(storage.keys())[0]] = temp
    return storage

def getError(datas):
    dicError = {}
    dicDrawer = {}
    preDrawer = ''

    for key, vals in datas.items():
        curDrawer = key
        dicError[curDrawer] = []
        dicDrawer[curDrawer] = []
        for val in vals:
            indexs = findDrawer(val)
            if indexs:
                for index in indexs:
                    if val[index] == curDrawer:
                        dicError[curDrawer].extend(val[:index])
                        dicDrawer[curDrawer].extend(val[index+1:])
                        if preDrawer != '':
                            dicDrawer[preDrawer].extend(val[:index])
                            dicError[preDrawer].extend(val[index+1:])
                    else:
                        dicDrawer[curDrawer].extend(val)
            else:
                dicDrawer[curDrawer].extend(val)
        preDrawer = curDrawer



    for key in dicDrawer.keys():
        dicError[key] = takeFeature(dicError[key]) 
        dicDrawer[key] = takeFeature(dicDrawer[key])

    return dicDrawer, dicError


def filterError(drawers, errors):
    for key in drawers.keys():

        for err in errors[key]:
            if err in drawers[key]:
                drawers[key].remove(err)


    return drawers



def returnResult(datas):
    storage = distributeFrame(datas)
    dr, err = getError(storage)
    drawers = filterError(dr, err)
    drawers = formatResult(drawers)



    t1 = drawers.copy()
    t1 = runFilterDrawer(t1)

    for dr2 in t1:
        print(dr2['drawer'])
        print(dr2['books'])
        print(len(dr2['books']))
        print()
    
    print('============')
    
   


   
    return drawers

returnResult(datas2)